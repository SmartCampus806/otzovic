version: '3.8'

services:

  fastapi:
      build:
        context: ./api_back
        dockerfile: Dockerfile
      ports:
        - "8888:8000"

  etl:
    build: ./etl
    container_name: etl
    depends_on:
      - mongodb
      - clickhouse
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - CLICKHOUSE_HOST=clickhouse

  analytic:
    build:
      context: ./anal
      dockerfile: Dockerfile
    container_name: analytic
    depends_on:
      - clickhouse
    environment:
      - CLICKHOUSE_HOST=clickhouse
    ports:
      - "8899:8000"

# ==============> ClickHouse <================
  clickhouse:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse

# ===================> Nginx <=====================
  nginx:
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fastapi

# ====================> Mongo <=====================
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo_data:/data/db

  mongo-express:
      image: mongo-express:latest
      ports:
        - "8081:8081"
      environment:
        - ME_CONFIG_MONGODB_SERVER=mongo
        - ME_CONFIG_MONGODB_PORT=27017
      depends_on:
        - mongo

 # ===================> Kafka <=====================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - shared_network

  kafka1:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    ports:
      - "9092:9092"  # Можно оставить для удобства, но не обязательно
      - "29092:29092"
    networks:
      - shared_network

  kafka2:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka2
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9093,EXTERNAL://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    ports:
      - "9093:9093"  # Можно оставить для удобства, но не обязательно
      - "29093:29093"
    networks:
      - shared_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka1
      - kafka2
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9093,kafka3:9094
    ports:
      - "8085:8080"
    networks:
      - shared_network

# ==================> Docker <====================

networks:
  shared_network:
    external: true

volumes:
  mongo-data:
  clickhouse_data: